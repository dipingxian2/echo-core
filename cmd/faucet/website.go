// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3a\xfd\x73\xdb\x36\x96\x3f\xbb\x7f\xc5\x2b\x2f\x5d\x49\x17\x93\x92\xed\x24\xeb\x93\x25\x75\xb2\xd9\x6e\x2f\x37\x77\x6d\xa7\x4d\xe7\x6e\xa7\xdb\xb9\x81\x48\x48\x44\x42\x12\x2c\x00\x4a\x56\x3d\xfa\xdf\xef\x3d\x00\xa4\x48\x4a\x76\x3e\x9c\xdb\x69\x66\x62\x91\xc4\xc3\xc3\xfb\xfe\x22\x67\x5f\xfe\xf5\xfb\x57\x6f\xfe\xfe\xc3\x37\x90\x9a\x3c\x5b\x7c\x31\xa3\x1f\xc8\x58\xb1\x9e\x07\xbc\x08\x16\x5f\x9c\xcd\x52\xce\x12\xfc\x3d\x9b\xe5\xdc\x30\x88\x53\xa6\x34\x37\xf3\xa0\x32\xab\xf0\x3a\x38\x2c\xa4\xc6\x94\x21\xff\xad\x12\x9b\x79\xf0\x3f\xe1\xcf\x2f\xc3\x57\x32\x2f\x99\x11\xcb\x8c\x07\x10\xcb\xc2\xf0\x02\x77\xbd\xfe\x66\xce\x93\x35\x6f\xed\x2b\x58\xce\xe7\xc1\x46\xf0\x6d\x29\x95\x69\x81\x6e\x45\x62\xd2\x79\xc2\x37\x22\xe6\xa1\xbd\x39\x07\x51\x08\x23\x58\x16\xea\x98\x65\x7c\x7e\x81\x68\x08\x8f\x11\x26\xe3\x8b\xbb\xbb\xe8\x3b\x6e\xb6\x52\xbd\xdb\xef\xa7\xf0\xb2\x32\x29\xa2\x11\x31\x33\x3c\x81\xbf\xb1\x2a\xe6\x66\x36\x76\x90\x76\x53\x26\x8a\x77\x90\x2a\xbe\x9a\x07\x44\xba\x9e\x8e\xc7\x71\x52\xbc\xd5\x51\x9c\xc9\x2a\x59\x65\x4c\xf1\x28\x96\xf9\x98\xbd\x65\xb7\xe3\x4c\x2c\xf5\xd8\x6c\x85\x31\x5c\x85\x4b\x29\x8d\x36\x8a\x95\xe3\xab\xe8\x2a\xfa\xf3\x38\xd6\x7a\xdc\x3c\x8b\x72\x51\x44\xf8\x24\x00\xc5\xb3\x79\xa0\xcd\x2e\xe3\x3a\xe5\x1c\x39\x1b\x2f\x3e\xed\xdc\x15\x4a\x24\x64\x5b\xae\x65\xce\xc7\xcf\xa2\x3f\x47\x13\x7b\x64\xfb\xf1\xc3\xa7\xd2\xb1\x3a\x56\xa2\x34\xa0\x55\xfc\xc1\xe7\xbe\xfd\xad\xe2\x6a\x87\x4c\x5e\x44\x17\xfe\xc6\x9e\xf3\x56\x07\x8b\xd9\xd8\x21\x5c\x3c\x0a\x77\x58\x48\xb3\x1b\x5f\x46\xcf\xf0\x80\x92\xc5\xef\xd8\x9a\x27\xf5\x49\xb4\x14\xd5\x0f\x3f\xdb\xb9\xf7\xe9\xf0\x6d\x5f\x85\x9f\xe3\xb0\x1c\x35\x53\x18\x44\x85\x2c\x5e\x5c\xa3\xda\xfc\x83\x63\xfc\xf6\x00\x52\x1a\x1d\x75\x16\x6d\xb8\x22\xcb\xcd\xc2\x18\xc1\xb9\x82\x3b\x7a\x7a\x86\xdb\xc2\x94\x8b\x75\x6a\xa6\x70\x31\x99\x7c\x75\x73\xea\xe9\x26\x75\x8f\x13\xa1\xcb\x8c\xed\xa6\xb0\xca\xf8\xad\x7b\xc4\x32\xb1\x2e\x42\x61\x78\xae\xa7\xe0\x30\xdb\x85\xbd\x3d\xb3\x54\x72\xad\xb8\xd6\xfe\xb0\x52\x6a\x74\x35\x59\x4c\xc9\xa2\xd0\x8d\x37\xfc\x14\xac\x2e\x59\x71\xb4\x81\x2d\xb5\xcc\x2a\xc3\x7b\x84\x2c\x33\x19\xbf\x73\xcf\xac\x37\xb7\x99\x88\x65\x26\xd5\x14\xb6\xa9\xf0\xdb\xc0\x1e\x04\xa5\xe2\x1e\x3d\x94\x2c\x49\x44\xb1\x9e\xc2\x8b\xd2\xf3\x03\x39\x53\x6b\x81\x07\x4e\x0e\x5b\x50\xa4\x5e\x8c\xb3\xb1\x0b\x5c\x78\xb5\x94\xc9\xce\xea\x30\x11\x1b\x88\x33\xa6\x35\x06\x9c\xae\x88\x6d\x40\xea\x00\x50\x1c\x62\xa2\xa8\x97\x3a\x6b\x4a\x6e\x03\xb0\x07\xcd\x03\x47\x04\x1a\x94\x31\x32\x47\x9e\x88\x3c\xbf\xa5\x87\x2f\x0b\xb3\x75\x78\x71\x59\x2f\x62\x64\xbd\xa8\x91\x18\x7e\x8b\xbe\x4c\xfa\x69\x34\x83\xe6\x21\xea\xbd\x2b\x06\x2b\x16\x2e\x99\x49\x03\x60\x4a\xb0\x30\x15\x49\xc2\x0b\xdc\xa7\x2a\x4e\x76\x24\x16\xd0\x0e\x7f\xf7\x44\xbf\xf4\xa2\xa6\x6b\x8c\x84\x79\xb6\x5a\x97\x3d\x0e\xef\x67\xe2\x1a\xfc\x85\x5c\xad\x30\x19\x84\x2d\x9e\x5a\xc0\xa2\x28\x2b\x13\xae\x95\xac\xca\x66\xfd\x6c\x66\x9f\x82\x48\x30\x83\xa8\x2c\xf0\xe1\xdf\x5e\x9a\x5d\xe9\x45\x11\x34\x8c\x4b\x95\x87\xa4\x09\x25\x11\x00\xed\x28\xe6\xa9\xcc\x12\xae\xe6\xc1\x4f\x32\xc6\x4c\x00\x85\xe3\x19\x7e\xfe\xf1\x3f\xc1\xab\x0c\xad\x04\x76\xb2\x52\xf0\x4d\x9c\x4a\x78\x95\xe2\x23\x40\xe3\x21\x83\x8d\xa2\xa8\x45\x8a\xb5\xde\x63\x62\xc3\xa5\x29\x0e\x50\x68\x3e\x15\xaa\xb6\x01\xc4\x45\xc0\xff\x61\xc2\x57\xac\xca\x0c\x24\x4a\x96\x89\xdc\x16\xa1\x91\xeb\x35\xe5\x3a\xc7\x86\xdb\x14\x40\xc2\x0c\xf3\x4b\xf3\xa0\x86\xad\xb5\xc8\x74\x29\xcb\xaa\xf4\x7a\x74\x0f\xf9\x2d\x52\x95\xf0\x84\xb4\x9e\x69\xd4\xee\xb7\xe8\x7b\x90\x73\xcb\xcd\x59\xdf\x26\x62\x8c\x3a\x26\x6c\xe3\x3c\xb2\x8c\xd9\xd8\xd1\xe2\x38\x02\xff\x6f\x56\x65\x35\xa6\x86\x03\x0c\x4e\x15\x74\xee\x42\x45\x81\x25\xc0\xdc\xaa\xb0\x24\xe0\xf0\x44\x24\xb7\xe7\xf0\x84\xe5\xb2\x2a\x0c\x4c\xe7\x10\xbd\xb4\x97\x7a\xbf\xef\x60\x47\xfc\x19\x9e\xcc\x1e\xb2\x6f\x90\x45\x9c\x89\xf8\x1d\xae\x0a\x54\xe8\xdd\x1d\x21\xdf\xef\x6f\xd0\x92\xc5\x0a\x9e\x44\x3f\xf2\x98\x95\x06\xeb\x8d\xfd\x1e\x83\x8d\xbf\x8e\xf8\x2d\x8f\x31\xb6\x0c\x47\x77\x77\x1c\xc5\xb3\xdf\xeb\x6a\x99\x0b\x33\xac\xb7\xd3\xf3\x22\xd9\xef\x89\x66\x4f\x27\xfa\xc3\x98\x90\xa2\x54\x6f\x11\xef\x0f\x5c\x09\x99\x68\x70\xf0\xb3\x31\x43\x09\x21\xb1\x7e\x5f\x57\x48\xe3\x2a\x3b\x98\xcb\x98\xec\xa5\x31\x74\xeb\x37\x96\xd4\x36\xa5\x27\xdc\x60\x1d\x36\xd4\x7b\x73\xc0\x40\xc9\xdf\xf1\xdd\x3c\x40\x9f\x6d\xed\xf5\xab\x18\x94\xb2\x25\x23\xb9\x38\xd6\x9a\x4d\xbf\x73\x32\xd3\x8d\xd0\xb6\xa6\x5a\xd4\x14\x1c\xc8\xfe\x40\xbf\xee\x45\x2e\x23\xcb\x29\x5c\x5d\xb6\xc2\xd6\x29\x97\x7f\xd1\x73\xf9\xab\x93\xc0\x28\x20\x9e\x81\xfd\x1b\xea\x1c\x19\xf1\xd7\xde\x59\x5a\xbe\xd7\xdf\x14\x52\x90\x6e\x48\x6b\x82\xfd\xe4\x06\x24\x86\xea\x55\x26\xb7\x98\x58\x2a\x23\x6f\x30\xea\xdf\x36\x09\xef\x6a\x32\x69\xd3\x4d\xb5\x20\x43\xe1\xd8\xf0\xa2\xb0\x18\xe5\xda\xe8\x26\x98\xb8\x25\xfb\x97\x62\x0a\xba\x89\xe6\x49\x4f\x1a\x74\x22\x89\xd6\x42\xb5\x54\xdf\x08\xf3\x24\xed\x2b\x2c\x1d\x9a\x44\xd1\x22\xc3\xa3\x6e\xa5\x3b\xc4\x6d\xd4\x01\x0e\x01\x93\x8f\xca\x01\x8a\x6a\xbc\xfb\x52\x80\x0b\x68\xc4\x7b\xc9\xb9\x72\x05\x06\x99\x2c\xd8\x5b\x64\x2a\x79\xc4\xc9\x64\x84\x4b\xa6\xf9\x87\x1c\x6f\x53\xfd\xe1\x78\x7b\xfb\xd8\xf3\x31\x9b\x2b\xb3\xe4\xcc\x7c\x08\x01\xab\xaa\x48\x5a\xfc\x53\xe8\x7c\xe4\xf1\x55\x81\x61\x58\xa1\xe7\xee\x3e\xf4\x7c\xb4\xad\x86\x00\x77\xdf\x25\x01\xef\xd4\xc3\x96\xd6\xbe\xf9\x4c\xae\xfd\xbe\x8a\xe4\x6a\xf1\xef\x72\x0b\x89\xe4\x1a\x4c\x2a\x34\x50\x6e\xfd\x1a\x2b\x87\xab\x06\xa4\x5c\xbc\xa1\x05\x9b\x5b\x57\xb6\xb0\x00\xbc\x55\x55\x61\xf3\x2e\xe6\x49\xac\x3c\xba\xc5\x88\x4f\xd1\x11\xbc\x91\x54\xd0\x6d\x50\xc4\xe8\xc4\x18\xfa\x85\xac\x34\xb0\xd8\x48\xa5\x61\xa5\x64\x0e\xfc\x36\x65\x95\x36\x84\x88\x62\x07\xdb\x30\x91\x59\x47\xb2\xfa\x04\xa9\x10\x3a\xae\xf2\x8a\x0a\x52\x84\xe1\x85\xac\xd6\xa9\x23\xc5\x48\x70\x49\x29\x93\xb8\x52\x93\x83\xd2\xcf\x81\x19\x83\xe1\x54\x9f\x43\x1d\x11\x50\x81\x18\x07\x04\x56\x46\xb8\x0b\x4b\xf6\x1c\xa9\xbe\x52\x09\xc6\x2a\x65\x76\xa0\xbb\x85\x05\x9e\x68\x33\x5c\x04\x2f\x8b\x9d\x2c\x38\xa4\x6c\x63\x09\x84\x37\xae\x97\x38\x87\x6f\xa5\xc4\xf4\xfe\x94\xe8\xfb\x1b\x56\x28\xd8\x48\x34\xdb\x90\xd1\x5d\x7d\xae\xe7\x02\x77\xa5\xc2\x89\xa9\xe4\x2a\x27\x1c\x09\x64\x02\x2f\x74\x34\x1b\x97\x87\xb0\x7a\x48\xd0\x59\x98\x4a\x25\x7e\xa7\xf2\x26\x6b\xc7\x50\xd3\x8b\x30\x75\x80\xb4\xca\xcf\xf8\x0a\x23\xe4\x33\x17\x20\xfb\xe6\xec\xfb\xa0\x53\xb6\x5c\xe3\xb4\xfd\x25\x65\x1d\x34\x21\x57\xd4\xba\x6a\x22\x31\x2d\x0a\x92\x9e\xc5\xb9\x43\xaf\xaf\x11\x1e\xfa\x95\xf1\xa4\x41\x42\x96\xd0\x15\xca\x46\xb4\xe4\x99\xb3\x77\x1c\xe5\x8b\xe5\x43\xb7\x4f\xf6\x44\xdb\x2e\x4b\xd8\x29\x01\x3e\xc2\x26\xf7\x6b\xf2\xe0\xf9\x8f\x0e\x21\xea\xe6\xab\xcb\x89\xb3\x4c\xba\x20\xf4\xf8\x8b\xf0\x12\x7f\x26\xb7\x93\x0f\xfc\x87\xc0\xb2\xc0\x3f\xa8\x27\xfc\xfb\xd5\xe5\x55\xdb\xa6\xdd\x13\x32\x3c\x82\xc0\x53\xf1\xa7\x36\x73\xac\x00\x91\x71\x1a\x91\xfc\x2f\x5b\xca\xca\x4c\x97\x19\x2b\x30\x1a\x5a\x52\xa9\xdc\xb0\x16\x70\x5f\x85\x8a\x46\xa8\xc9\x20\x88\x5e\x6b\x23\x7e\x1e\xa2\x61\xa8\x2b\x85\xe5\x69\x41\x89\x11\x88\x63\xeb\xa6\xc5\x80\x6c\x8c\xc4\x32\x8a\x66\x4b\x35\x5e\xbc\x92\xe5\x2e\xb4\x48\xec\xf6\x23\x21\xea\xaa\xa4\x41\x4b\xd4\x16\x26\xa3\x5e\x28\xe3\x7a\x7c\x3d\x79\x7e\xfd\xe2\x41\x06\x34\x55\xda\x96\x8b\x86\x42\x04\xc2\x0a\xd5\xd5\xf5\x4b\x79\x0b\x58\xbe\xc2\x4a\xa0\x8b\xb1\x2d\xdb\x7d\x89\x06\x63\xbb\xb0\xc7\xdb\xec\xda\xba\x59\x58\x66\x95\xa6\x2a\x44\x90\x9b\xfe\xa1\x0c\xd8\xc5\x01\xf8\x01\x09\x3c\x87\xb2\x5a\x66\x42\xa7\x68\xc7\x05\xdf\x62\x6a\xc0\x16\xa6\x58\x2f\xec\xd3\x98\xba\x54\x7b\x0b\xd8\x35\x9b\x87\xed\x81\xe7\x4b\x8e\xcc\x1d\x5b\xc4\x27\x1a\x04\x9d\x68\x95\xf8\xcf\x57\xe0\xca\x07\xc7\x3f\x94\xd2\xea\x88\xfd\xc7\xd5\xd8\x91\x0b\x6f\xb7\xdb\xa8\x96\xa5\xf5\xdf\x94\x67\xe5\x98\x12\x19\x56\x29\x66\x37\x76\x71\x50\x16\xe3\xaf\xb1\x16\xb9\xbc\xbe\x7c\xf1\xe2\xf2\xd9\xbf\x5d\x3f\x7f\x7e\x79\xfd\xec\xf9\x7d\xce\xdd\x98\xc5\xa7\xfb\xb6\x6b\x86\xbe\x93\x34\x7c\x68\x3a\x21\x67\x31\x75\x05\x4e\x95\x56\x42\x9d\xa4\x0a\x3e\xd9\x8a\xaa\x82\xca\x49\x2c\xd8\x4e\x56\x82\x1f\x61\x47\xd6\x90\x1e\xa0\xec\x91\xc6\x55\x1b\x10\xd9\x0a\x0a\x9a\x38\xac\x67\x32\xa8\x9b\xc6\xa0\xce\x41\x8b\xbc\xcc\x76\x68\x24\x8d\xd6\xef\xb3\xac\x7b\xd5\xf2\x5e\xc3\xea\x2a\xce\x99\x99\xad\xe3\x72\x99\x70\x2a\xe0\x74\xa5\x63\x5e\xda\x71\x3d\x55\x45\x7f\xd9\xfd\xce\x90\x56\x2c\x77\x7c\xf5\x14\xc1\xf7\x05\x12\x59\x69\x2c\xc6\xb0\xce\x49\xf8\xb2\x5a\xaf\x6d\xc5\xa7\xb0\xa8\x13\x1b\x86\x64\xfb\x0c\xa8\xbd\x5d\x34\x66\xd1\xea\x50\xa9\x78\xcd\x5a\xb5\xe4\xdf\x65\x05\x31\x16\xcd\x46\xe1\x21\xce\x57\x90\x13\xf2\x95\x92\x3b\x6e\x9a\xa2\x6d\xc9\xb1\x09\xb4\x20\x8e\xef\x95\xe0\x99\xad\xe0\x34\xc7\xa2\x0c\x97\xf2\x2a\xb6\x4e\x49\x15\x9a\x65\x62\xcb\x84\x01\x2c\xc2\x44\xe6\x24\x6a\x2a\x55\x50\xbd\xc7\x3b\x85\xd6\x51\x0f\x3f\xe3\x39\xca\x86\x9f\xa8\x6e\x9b\xee\x1b\xa9\x7a\xe5\xc0\x91\x79\xec\xfd\x62\x52\x29\xb0\x35\x2a\x4b\x93\x46\x6c\x29\x87\x68\xde\xdf\x9d\x37\x57\xfe\xe2\x30\x6a\xb6\xcb\xe3\x31\x7c\x9b\xc9\x25\xd6\xa3\x1b\xb2\x75\x3c\x5a\x13\x67\x34\x04\xeb\x48\x4b\x1b\x66\xb0\x98\x96\x2b\xfb\xd4\x51\x4e\xfb\x71\x17\x69\x90\xe7\xa5\x81\xb9\x1f\x94\xd2\x33\xcd\xd5\xc6\x8f\x7f\xe9\x96\x26\x30\x9d\xf5\x46\xea\x73\xf8\xe5\xd7\x9b\x2f\x3c\x29\x7f\xe5\x2b\x6b\x12\x64\xe1\x8e\x65\x93\x32\xf4\x6e\x85\x6d\x19\x12\x16\x67\x12\xed\xd0\x51\x48\x63\x24\x20\x2a\x6b\x4c\x35\x66\x5a\x28\xed\x69\x35\x92\x61\xca\x74\x3a\xf2\x73\x5e\xc5\xad\x96\x9a\xb5\xfa\xf9\x19\x59\xdd\x90\x10\x88\xf9\xe4\x06\xc4\xac\xc6\x1b\x65\xbc\x58\x9b\x14\x1f\x3d\x7d\xda\x00\x9f\xa1\x4a\x87\x35\xc4\x2f\xe2\xd7\xc8\xdc\x46\x74\x0a\xcc\xe7\xd0\x3e\xcd\x1e\xe8\xf1\xe8\x12\xe3\x3c\x1f\x8a\x73\xb8\x18\xdd\xd4\xab\x4b\x64\xed\x5d\x7d\xe7\xf5\xe8\x7e\xec\xdf\xfd\x4d\x57\x32\x56\xf8\x1d\xd9\xb8\x19\x0e\xb6\x1c\xb0\x16\x68\x1a\x95\xca\xc0\xfb\xb0\x53\x41\xa3\x10\x0b\xd7\x96\xca\x91\x5d\xfa\x0b\x6f\x53\x35\x0b\x0e\x4d\xa4\xf1\xe1\xf0\x3f\x7e\xfa\xfe\xbb\x08\xe3\x0a\xda\xaa\x58\xed\x86\x77\x78\xda\x14\x9e\x0c\x83\x7f\xa1\xf9\xea\xe8\x97\xc9\xaf\xd1\x86\x65\x15\x3f\xb7\xfa\x9e\xda\xbf\x47\xa7\x9c\x83\xbf\x9c\x42\xf7\xc0\xfd\x68\x74\x73\x7a\xde\xd5\x1a\xcf\xa1\xf6\xb9\x19\x12\x60\x63\xf8\x7d\x19\x31\xc8\x39\x46\x44\xeb\xba\xb8\x51\x16\x05\xba\x0f\x54\x25\x4a\xcc\xf1\x82\x2d\x9c\xd6\x07\x43\xac\x21\xe6\xc7\x46\xe1\xe1\xe7\x36\x61\xff\x37\x5f\xfe\x84\x89\x01\x8f\x1f\x0e\xb7\xa2\x48\xe4\x36\xc2\x44\x61\x83\x2d\xbd\xb0\x30\x12\xfb\x5d\xd4\xff\x1c\x7c\x1e\x0d\x46\xf0\x35\x04\x5b\x4d\x19\x35\x80\x29\x5d\xd2\xd5\x08\x9e\x42\x7f\x7b\x4a\x39\xff\x29\x04\x63\x56\x8a\x60\xe4\xdc\xa1\x16\xbc\x2c\x30\x9e\x68\xb6\xe6\x6d\x02\x6d\x93\xdb\x18\x19\xf1\x91\xeb\x35\x02\x58\x05\x95\xf4\x06\xd5\x81\x44\x34\x55\xa9\xad\x8d\x6c\xd6\x82\x21\x8d\x45\x95\x65\x07\x23\x75\x4e\x71\x53\x9b\x5f\x07\x3c\x72\xd9\xe6\x4b\xdc\x44\x43\x06\x12\x71\x72\xd8\x49\xca\x77\xc3\x90\x51\x44\x79\xe1\xb0\x63\x74\xd3\xb6\xe6\x0e\x36\x2c\x5d\xde\x83\x8e\x27\x7d\x7c\x08\x75\x1a\xa1\x9d\x3d\x3d\x84\xcf\xcd\xaa\x5a\xe8\xec\x83\x7b\xb0\x15\x15\x16\x57\xea\x21\x74\x6e\xf6\xe4\xd1\x59\x51\xbf\x2e\x4c\x6b\x2f\xba\xf7\x8b\xd1\x3d\xd8\x39\x26\xd1\x7b\x91\xd3\x0b\xc9\xe1\x5d\xc6\x76\x54\x35\xc1\xc0\xc8\xf2\x95\x1d\x16\x0d\xce\x6d\xc6\x9d\x42\x83\xe1\xdc\xbe\x03\x40\x18\x7b\x47\xeb\x22\xe7\x76\xd7\x73\x6c\x2c\xcf\xa1\x7e\x7d\xf6\x17\x46\x4e\x88\x55\xcb\xfe\x1e\x7a\x74\x15\xc7\x94\xf7\x1f\x43\x91\xc7\xd1\xd0\xe4\xef\x1f\x41\x55\x93\x1b\x3a\x64\xc1\x9f\xfe\x04\x47\xab\x5d\x33\xc6\x18\xf0\x5f\x8c\x46\x2a\x34\x17\x56\x7c\x63\xe7\x3f\x0d\x7c\x2e\xb4\xb6\x83\x15\x8d\xc5\x4b\xc1\xfd\x9e\x8f\x0b\xfb\x47\x34\x7a\x30\x58\xc0\xa4\x4f\x20\x85\xc3\x56\x5a\x38\x91\x2d\x5a\x78\xbb\x89\xe0\x6c\xdf\x3e\xaf\xb3\x13\x65\x8a\x9c\x43\x10\xb4\x37\x1f\x41\x10\x40\x83\x0c\x23\x89\x79\xe3\x74\x31\xf4\xd9\xf1\x54\xee\x1a\x9d\xd3\xb8\x7b\x32\x3a\x22\x62\x7f\x10\xef\xcb\x92\xca\x26\x2c\xf6\x76\x36\x24\x36\xb2\xb5\x85\x23\x95\x40\x14\xd2\x32\x1a\xe5\x67\xae\x66\xf1\x5b\x49\xc0\x7e\x10\x36\x87\xf0\xe2\xe6\x44\x16\x6d\x49\xb2\xc5\x5a\x5f\x3d\x27\x64\xdf\x57\x51\x57\x66\x3d\xe0\xf0\xa2\xa3\x94\x8e\xbe\x4e\x2b\xe6\xac\xa1\x5b\x1c\x24\xda\x53\xd7\x41\x5f\x7d\x99\xb5\xe8\x77\x78\x9e\x5e\x7c\x20\x1b\xcd\x72\x59\xe9\x74\xd8\x23\x74\x74\x73\xac\x9b\xd7\xe8\x99\x54\x25\xd3\xfb\x0c\xab\x0b\x6a\x06\xb0\x20\xef\xab\xc4\x96\xea\x8a\x87\x58\xd7\x25\x08\xe9\x4b\x0a\x57\xd9\x53\x01\xd8\x51\x99\xeb\x2b\xdb\xe6\xf4\x91\x0e\x63\x4b\x32\x1a\x6b\xe2\xbf\x9e\x13\x58\x43\xed\x58\x2a\x01\xf3\x8c\x95\x1a\xdd\x1d\x95\x63\xbf\x66\x18\x8e\x22\xec\x3a\x6f\x87\xa3\xd0\xdf\xf7\x71\xd4\xeb\x37\x4d\xa3\x58\x93\xfd\x14\x91\xcf\x8c\xa2\x89\xf9\x20\xc0\xfc\x7a\xaa\x60\xc3\xac\x3b\x58\x1c\x28\x68\x6f\x05\x98\x99\x64\x61\x27\xda\xae\x63\xfb\x47\x40\xef\xcd\xd6\xb6\x11\x9a\x52\xa9\x35\x3c\x42\xcb\xb0\x51\x41\x26\x08\xeb\xe8\x06\x0e\xe0\xbe\x55\x8c\x49\x39\x37\xe0\x7a\x52\x3b\x38\x87\xe6\x55\x93\xbd\x5b\x4a\x85\x4a\x09\x15\x4b\x44\xa5\xb1\x45\xc5\x67\xff\xa8\x5f\xc5\xd9\xf1\xfe\x83\xa4\x62\xd0\x5b\x1c\x51\xe4\x07\xc5\x48\x12\x36\x25\x08\xf0\x3e\x34\x0d\xb3\xed\xaf\x28\xe0\xc4\x4b\x0c\x68\xbe\x71\xf0\xcf\x73\x6c\x94\x33\x4e\x04\x1f\xd0\x93\x33\x92\xfe\xdb\x2e\xd5\x3d\x12\xfc\xdb\x8b\xc3\x9e\x3d\xd0\xab\xd7\x07\x36\x34\x2f\x42\x06\x64\x00\x21\xb1\x2c\xac\xcc\x7d\xbb\x6d\x1f\xab\x81\x95\x85\xff\x26\x26\xa9\x94\xad\xb5\x86\xa1\x37\xb0\x73\x4c\x55\x54\xfb\x25\x7a\x30\x8a\xd2\x2a\x67\x05\x6a\x68\x48\x79\x69\xe4\x64\x65\xdf\xac\x04\xc7\x21\xf9\x88\x98\xc3\x2b\x8f\x41\x9d\xe3\x06\x5e\x88\x83\x5a\xbb\xcf\x0e\xdd\x3d\xbd\x02\x1c\x7c\xa4\x84\x4e\x9f\x12\x2e\x99\x82\xf6\x4d\x58\x27\x5f\x50\x92\x4e\xaf\xd7\x70\x69\xe0\x66\x19\xb6\x3e\x2f\xe4\x76\x3e\xb8\x9a\x34\x44\x3a\x45\x5b\x3d\x0f\xbc\xad\x1d\x29\x83\xa8\xac\x5d\x73\x81\x89\xe2\x73\x50\xeb\xe6\x21\x3d\x0e\xb0\xbb\x28\xf1\x0c\x16\xd3\x37\x41\xff\x0f\x8c\x7c\x06\x21\x7f\x34\x89\x64\x87\xb5\xf0\xac\x99\x76\xe8\xa5\xd5\x46\xb6\xff\x4a\xfe\x06\x63\x2b\x61\x04\x3d\xc9\xc8\xbd\x96\xd8\x03\xec\xb9\xf6\xfd\x7e\x6f\x5f\x15\x06\xfd\x9c\x42\xd5\x6e\xf3\x92\x1b\x7d\xc4\xe4\xd9\x10\xe3\xa9\xfd\xda\x89\x68\x6e\x30\x58\x04\xee\x71\xb7\xa4\xdb\x77\x1b\x19\xea\xdf\x79\xaf\xcf\x82\x56\x71\xd2\xf4\x62\x75\x25\x02\xfb\xc3\x47\x61\x98\xe1\x7e\xc2\xd0\x6a\xb0\xbf\xfb\xf9\x35\xb6\x73\xd8\xd9\x50\xf6\x92\x40\xf9\xd1\x4d\x9e\xeb\xaf\xc6\x50\x05\x9a\xa6\x48\x5b\xa6\x12\x3f\x9f\xc1\xf5\x9d\x7d\x2d\x57\x97\x7e\x78\xec\x6b\x8a\x62\xa8\xa4\xe1\x51\xdf\xf7\x64\x38\x88\xda\x2a\xc7\x08\xc1\x59\x9c\x1e\x03\xda\x8c\xd5\x9c\x3b\x87\xef\x6c\x0b\x30\x7c\x32\xa4\x97\x9b\xa3\x88\x19\xa3\x86\x83\x8e\x31\x0c\x46\xa4\xd7\x8b\x56\x4b\xd6\x6c\x9f\x75\xdc\xea\x21\x1c\x87\x62\xba\x29\x04\x6a\xf0\x58\xeb\xa1\xb3\x2b\x84\x3a\xe0\xee\x9a\xd5\xe0\xab\x41\xa3\xa8\x83\x7b\x1f\xf8\x98\x9f\xa4\xa4\x83\x7a\x40\x5e\x36\x38\x3a\x9e\x25\xc9\x2b\xf2\x9f\x61\x70\xc2\xd3\xfb\xd6\x31\x6a\x84\xed\xe2\xf5\x83\x52\x76\x9f\xd7\xdc\x23\x62\x91\xe0\x66\x5d\x2d\xdd\x6c\x62\xf8\xbc\x69\xc0\x6a\x30\x6b\xbc\xfd\x54\x70\x54\x50\xd0\x11\xdd\xa2\x22\xec\x15\x21\x0f\x64\x0d\x7f\xa4\xe3\x6a\x7f\x4e\x02\x9f\x8c\x9a\xd1\xd6\x37\x9a\x8a\x2b\x37\xfe\xdf\xf2\xa5\xb6\x93\x04\xf0\xf6\x6e\xa7\x39\x6e\x6a\xf3\xf2\x87\xd7\xad\xc9\x4d\xe3\x11\x43\x8b\xbd\xf9\xa0\xf3\xd4\x9c\xe4\xe4\x17\xa4\x34\xca\x77\xef\xb5\xec\x20\xbf\x19\xa4\xd0\xa4\x81\xbe\x11\xc5\x6e\x68\x57\xc4\x80\x3d\x16\x57\x8b\x16\x7a\x3f\x5d\x99\x8d\xdd\xb7\x8d\xb3\xb1\xfb\x7c\xfb\xff\x02\x00\x00\xff\xff\x4f\x6a\x86\x3c\xcf\x2d\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 11727, mode: os.FileMode(420), modTime: time.Unix(1531396415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": &bintree{faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

